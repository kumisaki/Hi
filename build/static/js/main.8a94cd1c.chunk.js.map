{"version":3,"sources":["components/Menu/TopMenu/index.jsx","components/Menu/LinkMenu/index.jsx","components/Menu/SideMenu/index.jsx","containers/home.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","menu","title","key","react_default","a","createElement","className","menu_default","theme","mode","defaultSelectedKeys","style","lineHeight","map","item","index","Item","Component","breadcrumb_default","margin","SubMenu","Sider","transSideMenu","tips","children","_this2","width","background","height","popover_default","content","length","Content","Footer","Home","photoes","layout_default","TopMenu","padding","LinkMenu","SideMenu","minHeight","onDrop","e","preventDefault","console","log","target","onDragOver","onDrag","draggable","textAlign","App","home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a94cd1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Layout } from 'antd';\n\nconst {\n  Header\n} = Layout;\n\nclass Main extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      menu:[{\n        title:'首页',\n        key:'home',\n      },{\n        title:'图册',\n        key:'tech',\n      },{\n        title:'笔记',\n        key:'den',\n      }]\n    }\n  };\n\n  render(){\n    const { menu } = this.state;\n    return (\n      <Header className = 'header'>\n        <div className='logo'></div>\n        <Menu\n          theme='dark'\n          mode='horizontal'\n          defaultSelectedKeys={['1']}\n          style={{ lineHeight:'64px' }}\n        >\n          {\n            menu.map((item,index)=>\n              <Menu.Item key={item.key}>{item.title}</Menu.Item>\n            )\n          }\n        </Menu>\n      </Header>\n    )\n  }\n}\nexport default Main;","import React, { Component } from 'react';\nimport { Breadcrumb } from 'antd';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menu: [{\n      //   title: '首页',\n      //   key: '1',\n      // }, {\n      //   title: '图册',\n      //   key: '11',\n      // }, {\n      //   title: '笔记',\n      //   key: '111'\n      }]\n    }\n  };\n  \n  render() {\n\n    const { menu } = this.state;\n\n    return (\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        {\n          menu.map((item, index) => (\n            <Breadcrumb.Item key={item.key}>{item.title}</Breadcrumb.Item>\n          ))\n        }\n      </Breadcrumb>\n    )\n  }\n};\n\nexport default Main;","import React, { Component } from 'react';\nimport { Layout, Menu, Popover } from 'antd';\n\nconst { SubMenu } = Menu;\nconst {\n  Sider\n} = Layout;\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menu: [{\n        title: '旅行',\n        key: '11',\n        children: [{\n          title: '建设中。。。',\n          key: '111'\n        }]\n      }, {\n        title: '静物',\n        key: '12',\n        children: [{\n          title: '建设中。。。',\n          key: '121'\n        }]\n      }, {\n        title: '爱好',\n        key: '13',\n        children: [{\n          title: '建设中。。。',\n          key: '131'\n        }]\n      }]\n    }\n  };\n  transSideMenu = (item) => {\n    const itemKey = item.key ? item.key : ' - ';\n    let tips = '';\n    switch (itemKey) {\n      case '11':\n        tips = 'photos';\n        break;\n      case '12':\n        tips = 'collections';\n        break;\n      case '13':\n        tips = 'others';\n        break;\n      default:\n        break;\n    }\n    return tips;\n  }\n  render() {\n    const { menu } = this.state;\n    return (\n      <Sider width={200} style={{ background: '#fff' }}>\n        <Menu\n          mode=\"inline\"\n          // defaultSelectedKeys={['1']}\n          // defaultOpenKeys={['sub1']}\n          style={{ height: '100%' }}\n        >{\n            menu.map((item, index) => (\n              <SubMenu key={item.key} title={\n                <div>\n                  <Popover\n                    content={this.transSideMenu(item)}\n                  >\n                    {item.title}\n                  </Popover>\n                </div>}>\n                {\n                  (item.children.length > 0)\n                    ?\n                    item.children.map((item, index) => (\n                      <Menu.Item key={item.key}>\n                          {item.title}\n                      </Menu.Item>\n                    ))\n                    :\n                    null\n                }\n              </SubMenu>\n            ))\n          }\n        </Menu>\n      </Sider>\n    )\n  }\n\n};\n\nexport default Main;","import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport TopMenu from '../components/Menu/TopMenu';\nimport LinkMenu from '../components/Menu/LinkMenu';\nimport SideMenu from '../components/Menu/SideMenu';\n\nconst {\n  Content, Footer\n} = Layout;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content:['一个不务正业的咸鱼程序猿的个人网站','建设缓慢','被疫情耽搁的准留学生','分享一些自己的旅行，和一些笔记'],\n      photoes:['','','']\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <TopMenu></TopMenu>\n        <Content style={{ padding: '0 50px' }}>\n          <LinkMenu></LinkMenu>\n          <Layout style={{ padding: '24px 0', background: '#fff' }}>\n            <SideMenu></SideMenu>\n            <Content style={{ padding: '0 24px', minHeight: 280 }}>\n              <div\n                onDrop={(e)=>{ e.preventDefault(); console.log('>>> target',e.target)}}\n                onDragOver={(e)=>{ e.preventDefault() }}\n              >\n                {\n                  this.state.content.map(item=>{\n                    return <div\n                      onDrag={(e)=>{console.log('>>> item',e.target)}}\n                      draggable={true}\n                    >\n                      {item}\n                    </div>\n                  })\n                }\n              </div>\n            </Content>\n          </Layout>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          @ KUMISAKI  鲁 ICP 备 18010648 号 - 1\n      </Footer>\n      </Layout>\n    )\n  }\n}\nexport default Home;","import React from 'react';\n\nimport Home from './containers/home';\n\nfunction App() {\n    return (\n      <div>\n        <Home></Home>\n      </div>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}